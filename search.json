[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Macfarlane Lab",
    "section": "",
    "text": "Welcome!\nYou have been hired into my lab, or are about to be hired in my lab. This website is a collection of resources that my students use to get trained and learn how to do things. It is also a helpful thing for me to remember all the things I have to do."
  },
  {
    "objectID": "onboarding.html#working-hours",
    "href": "onboarding.html#working-hours",
    "title": "1  Onboarding",
    "section": "1.1 Working hours",
    "text": "1.1 Working hours\nWhen I hire you I will state expectations for a weekly commitment. This is typically:\n\nUndergraduates: 5-10 hours per week\nGraduate student academic year: 10-20 hours per week\nGraduate student Spring/Summer: 20-30 hours per week\n\nYou may work whatever hours you choose, with the exception of any weekly project team meetings or project sponsor calls. That said, I strongly recommend you schedule a regular weekly time to dedicate to the research projects you are working on. Other commitments might easily crowd out the time for your research if you do not prioritize the time. Also, I want to pay you! But I can’t if you don’t put in time.\nI strongly recommend that students who work for me as a research assistant quit any other research assistance, internship, or other external employment."
  },
  {
    "objectID": "onboarding.html#communication",
    "href": "onboarding.html#communication",
    "title": "1  Onboarding",
    "section": "1.2 Communication",
    "text": "1.2 Communication\nI use Slack for almost all lab-related communication. Please install the Slack app on your phone and your computer. I expect you to respond to messages within a reasonable amount of time, but I never expect you to respond while you are with your families or other times when you are not working.\nIf you would like to reach me with a message, use slack.\nIf you would like to meet with me in person about a brief issue, please schedule an office hour appointment using Calendly. If you would like to schedule a longer meeting with me, please schedule a research meeting appointment using Calendly."
  },
  {
    "objectID": "onboarding.html#wages",
    "href": "onboarding.html#wages",
    "title": "1  Onboarding",
    "section": "1.3 Wages",
    "text": "1.3 Wages\nStudents in my lab have their wages determined by skill and seniority, following the basic outlines of the BYU hourly pay scale. Each semester I will evaluate student work and give raises as appropriate.\nIf you believe you merit a raise or there are needs in your family that might necessitate a higher wage, please speak to me. I’ll do what I can."
  },
  {
    "objectID": "workflow.html#motivation",
    "href": "workflow.html#motivation",
    "title": "2  Project Workflow",
    "section": "2.1 Motivation",
    "text": "2.1 Motivation\nThe goal of this workflow is to allow you to work effectively in my lab, and to ensure that I and future students (including yourself!) know where things are and can rebuild them if necessary. For example, a peer reviewer may ask for changes to the analysis many months after you are gone. If you follow this workflow, the chances of me being able to productively use your work increase.\nA workflow that you have probably used in the past consists of:\n\nKeep data in a spreadsheet (Excel)\nDo your analysis in the same spreadsheet\nCopy a table or numbers from a spreadsheet into a document (Word)\nWrite about the analysis in Word\n\nThis workflow has its benefits, mainly simplicity. Excel definitely has its place. But there are lots of drawbacks.\nFirst, spreadsheets tend to hide formulae or make them very difficult to read. For example, JP Morgan Chase bank lost almost $6 Billion when a trader believed a formula in an excel spreadsheet that he couldn’t see the error in, because the formula wasn’t shown. It would be better to have clearly written methods and analysis, than to just show the numbers that go in that analysis.\nSecond, this method can rely on lots of manual tasks: push this button, copy this figure, update this number. Doing it once is easy, but what if I ask you to go back and change something? Will you remember every table that depends on that calculation? Or what if you leave and another student has to figure out what you did? It would be better to have a reproducible document that re-builds itself whenever the analysis changes.\nThis is the problem that R and R markdown solves. For example, I can embed R code into this document. I can load a library, read a dataset, and create a figure all at once.\n\nlibrary(ggplot2)\n\nggplot(mpg, aes(displ, hwy, colour = class)) + \n  geom_point()\n\n\n\n\nAnd if I tell you that I’d rather see a different figure, you can just change the code and it will print something different\n\nggplot(mpg, aes(hwy, fill = class)) + \n  geom_density(alpha = 0.5) + theme_bw()\n\n\n\n\nSo, how do you make this happen?"
  },
  {
    "objectID": "workflow.html#r-projects",
    "href": "workflow.html#r-projects",
    "title": "2  Project Workflow",
    "section": "2.2 R Projects",
    "text": "2.2 R Projects\nThe basis of every project — a paper, thesis, or report — should be an R project. An R project is a folder associated with an .Rproj file that can be created and opened in R Studio. For an introduction to installing R and Rstudio, there is a tutorial at DataCamp.\nThe R project folder should be organized into these subfolders as follows:\n<project>/\n  - README.md\n  - <project.Rproj>\n  - data/\n  - R/\n  - py/\n  - ....\n\nREADME.md is a markdown file that describes what the project is about. What is the central question, who is the project sponsor, and what other data resources might need to be referenced in the project.\ndata/ is the folder where you place all of your input or intermediate data. There may be subfolders in this folder. Preference is for plain text (csv or json) data over data stored in spreadsheets or binary formats. If you get data from the internet, it might be better to write code to download the data instead of storing the downloaded data. That would be more reproducible.\nR/ is a folder where you write your R scripts. Each script should be clearly named, e.g., data_cleaning.R .\npy/ is a folder where you write your python scripts. Each script should be clearly named, e.g., data_cleaning.py .\n\nOther folders might be useful, but should be carefully named and organized.1 Additionally, it might be a good idea to put README file in some of the sub-folders if the information in them might need more explanation.\n\nThe LinkedIn Learning Course R: Essential Training: Wrangling and Visualizing Data shows how to implement this\nFor an introduction to installing R and R Studio, there is a tutorial at DataCamp. Follow along with the tutorial if you are new to R and R Studio.\nIf you are curious about projects, there is a helpful R Studio resource page with instructions on how they work."
  },
  {
    "objectID": "workflow.html#git-and-github",
    "href": "workflow.html#git-and-github",
    "title": "2  Project Workflow",
    "section": "2.3 Git and GitHub",
    "text": "2.3 Git and GitHub"
  },
  {
    "objectID": "workflow.html#targets",
    "href": "workflow.html#targets",
    "title": "2  Project Workflow",
    "section": "2.4 Targets",
    "text": "2.4 Targets"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  }
]